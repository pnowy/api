nameOverride: "" # override name of the chart (by default spring-boot-api)
fullnameOverride: "" # override full name of installation (by default release name + chart name)

image:
  repository: pnowy/spring-boot-api
  tag: 0.1.0
  pullPolicy: IfNotPresent

replicaCount: 1

httpPort: 8080
managementPort: 8081

spring:
  # Uncomment if you want to activate a specific spring profile
  # profile: kubernetes
  config: {}
      ## content of config (typical spring properties file)
      # content: |-
        # logging.level.root=DEBUG
        # spring.application.name=props

    ## An optional secret that contains a base64 encoded YAML file to be loaded in
    ## for passwords and other secrets, by default `/config/secret.yml`
    ## this secret must only have a single key of `secret.yml: |-`.
    # secretName: configSecret

## Extra environment variables
env:
  values: {}
    # DATABASE_ENGINE: mysql
    # DATABASE_HOST: mysql
    # DATABASE_NAME: spring
    # DATABASE_USERNAME: spring
    # DATABASE_PASSWORD: spring
  # configMap: "" # inject environment variables from config map
  # secret: "" # inject environment variables from secret

deployment:
  annotations: {}

## uncomment and modify the following livenessProbe and readinessProbe.
## These defaults should work with anything that uses the spring health actuator version higher than 2.2.4
# management.endpoints.web.exposure.include=health,prometheus,info
# management.endpoint.health.show-details=always
livenessProbe:
  httpGet:
    path: /actuator/health/ping
    port: management
  initialDelaySeconds: 180
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /actuator/health
    port: management
  initialDelaySeconds: 60
  periodSeconds: 10

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}

service:
  enabled: true
  port: 8080
  ## Service type can be set to ClusterIP, NodePort or LoadBalancer.
  type: ClusterIP
  annotations: {}
  #   external-dns.alpha.kubernetes.io/hostname: drone.domain.tld.

imagePullSecrets: []
  # - name: aws-registry

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podSecurityContext: {}
  # runAsUser: 1000
  # fsGroup: 2000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: spring-boot-api.local # works for all paths
  tls: []
  #  - secretName: spring-boot-api-tls
  #    hosts:
  #      - spring-boot-api.local

podDisruptionBudget:
  enabled: false
  minAvailable: 1